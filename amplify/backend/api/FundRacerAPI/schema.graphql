type Level @model @auth(rules: [{allow: public}, {allow: groups, groups: ["Managers"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  amount: Float!
  impact: String!
  reward: String!
  fundraiserID: ID! @index(name: "byFundraiser")
}

type Member @model @auth(rules: [{allow: public}, {allow: groups, groups: ["Managers"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  name: String
  last_name: String
  email_address: AWSEmail!
  phone_number: String
  fundraiserID: ID! @index(name: "byFundraiser")
}

type Donation @model @auth(rules: [{allow: public}, {allow: groups, groups: ["Donors"], operations: [read, create, delete, update]}, {allow: owner}]) {
  id: ID!
  amount: Float!
  donor_name: String
  donor_email: AWSEmail
  donation_date: AWSDateTime
  donorID: String
  fundraiserID: ID! @index(name: "byFundraiser")
}

type Fundraiser @model @auth(rules: [{allow: public}, {allow: groups, groups: ["Managers"], operations: [read, create, update, delete]}, {allow: owner}]) {
  id: ID!
  name: String!
  description: String!
  goal: Float!
  start_date: AWSDate!
  end_date: AWSDate!
  Donations: [Donation] @hasMany(indexName: "byFundraiser", fields: ["id"])
  Levels: [Level] @hasMany(indexName: "byFundraiser", fields: ["id"])
  Members: [Member] @hasMany(indexName: "byFundraiser", fields: ["id"])
  creatorID: String
}
 